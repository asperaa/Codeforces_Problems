#include <bits/stdc++.h>
using namespace std;
#define MAX 100

int xC[4]={0,1,0,-1};
int yC[4]={1,0,-1,0};
int n,m,cnt=0,ind=0;
char maze[MAX][MAX];
set< pair<int,int> >visited;
set< pair<int,int> >recStack;
bool dfs(int x,int y,int xp,int yp)
{
	cnt++;
	cout<<cnt<<endl;	
		
	if(maze[x][y]==maze[xp][yp] || cnt==1)
		visited.insert(make_pair(x,y));
	else
		return false;

		xp=x;
		yp=y;
		
		for(int i=0;i<4;i++)
		{
		
			x=x+xC[i];
			y=y+yC[i];

		
		
		if(visited.find(make_pair(x,y))==visited.end() && x>=1 && y>=1 && x<=m && y<=n && maze[x][y]==maze[xp][yp])
		{
			
			//cout<<maze[x][y]<<" "<<maze[xp][yp];
			if(dfs(x,y,xp,yp))
				return true;
		
		}

		if(visited.find(make_pair(x,y))!=visited.end() && x!=xp && y!=yp && maze[x][y]==maze[xp][yp])
		{
			return true;
			
		}
		

		}

	
		return false;			


	
}
		

int main()
{
	cin>>n>>m;
	
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++)
		{
			char c;
			cin>>c;
			maze[i][j]=c;
		}
	}
	
/*	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++)
			cout<<maze[i][j]<<" ";
		cout<<endl;
	}
*/
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++)
		{
			if(visited.find(make_pair(i,j))==visited.end())
			{
			
			
				if(dfs(i,j,-1,-1))
				{

					cout<<"Yes"<<endl;
					return 0;
				}

				cnt=0;
			}
		}
	}

	cout<<"No"<<endl;

	return 0;
}

	
		
